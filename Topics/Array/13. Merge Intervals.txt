** Merge Intervals
Time Complexity: O(n log n), Space Complexity: O(1)
Approach:
1. sort given input based on first element of interval
2. first as a[0][0] and second as a[0][1].
3. loop from i = 1 till last index of vector of intervals
	1. if(a[i][0] <= second) then second = max(second, a[i][1])
	2. else push {first, second} into ans vector of vector, first as a[i][0] and second as a[i][1].
4. push {first, second} into ans	--> push last interval into ans.
5. return ans.