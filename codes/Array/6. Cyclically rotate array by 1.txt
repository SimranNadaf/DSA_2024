* Cyclically rotate array by one:
code: c++
Approach 1: set previous element to current element and save last element to first elemnt
Time Complexity: O(n), Space Complexity: O(1)
void rotate(vector<int> &arr) {
        int last = arr[arr.size()-1];
        for(int i=arr.size()-1;i>0;i--){
            arr[i] = arr[i-1];
        }
        arr[0] = last;
    }

Approach 2: using two pointer: move first pointer from start to end, second pointer at last element, repeat till first pointer is not equal to second pointer.

Time Complexity: O(n), Space Complexity: O(1)

void rotate(vector<int> &arr) {
        int j=arr.size()-1;
        for(int i=0;i!=j;i++){
           int temp = arr[i];
           arr[i] = arr[j];
           arr[j] = temp;
        }
    }